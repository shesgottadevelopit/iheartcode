// mixins

$min-vw: 20rem;
$max-vw: 41.25rem;

@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

@mixin ft-base(
$font-size-min,
$properties: font-size
) {
		@each $property in $properties {#{$property}: $font-size-min;}
} 
	
@mixin ft-min(
$font-size-min,
$font-size-max,
$properties: font-size
) {
		@each $property in $properties {#{$property}: calc(#{$font-size-min} + #{strip-unit($font-size-max - $font-size-min)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});}
}

@mixin ft-max(
$font-size-max,
$properties: font-size
) {
		@each $property in $properties {#{$property}: $font-size-max;}
}

//usage
/*
h1 {@include ft-base(1.68rem); }
h2 {@include ft-base(1.56rem);}
h3 {@include ft-base(1.45rem);}
h4 {@include ft-base(1.25rem);}
h5 {@include ft-base(1.15rem);}
h6 {@include ft-base(1.05rem);}


@media screen and (min-width: 20rem) {
h1 {@include ft-min(1.68rem, 2.35rem ); }
h2 {@include ft-min(1.56rem, 1.93rem);}
h3 {@include ft-min(1.45rem, 1.75rem);}
h4 {@include ft-min(1.25rem, 1.56rem);}
h5 {@include ft-min(1.15rem, 1.25rem);}
h6 {@include ft-min(1.05rem, 1.125rem);}
}

@media screen and (min-width: 41.25rem ){
h1 {@include ft-max(2.35rem); }
h2 {@include ft-max(1.93rem);}
h3 {@include ft-max(1.75rem);}
h4 {@include ft-max(1.56rem);}
h5 {@include ft-max(1.25rem);}
h6 {@include ft-max(1.125rem);}
	
}
*/